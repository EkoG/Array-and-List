class Solution:
     def addBinary(self, a: str, b: str) -> str:
            if not a: return b
            if not b: return a
            if a[-1] != b[-1]:
                return self.addBinary(a[:-1], b[:-1]) + '1'
            elif a[-1] == '0' and b[-1] == '0':
                return self.addBinary(a[:-1], b[:-1]) + '0'
            else:
                return self.addBinary('1', self.addBinary(a[:-1], b[:-1])) + '0' 
    #Cuando b y a son iguales a 1, se devuelve de manera anidada la funcion (1, funcion(siguiente STRING, siguiente String)) + 0, 
    #guardando el carrier hasta que haya una suma diferente de 1 + 1
            #nota:     cuando el carrier llega null, null --> (1,null) --> regresa '10'; esto lo podría sumar con lo demás o ser 
            #la primera parte de la suma y podría sumar más carriers
